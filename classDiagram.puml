@startuml
!define LIGHTORANGE
!includeurl https://raw.githubusercontent.com/Drakemor/RedDress-PlantUML/master/style.puml

 enum processState{
     WaitingPayment
     Agended
     InProgress
     Concluded
 }


 enum classification{
     Unreliable
     Clumsy
     GetsItDone
     HardWorker
     Attentive
     Savior
 }


 entity servicesType{
     bool pro
     string service
 }

 entity date{
     unsigned int day
     unsigned int month
     unsigned int year
     unsigned int hours
     unsigned int minutes
 }

class houseMaster{
    vector<servicesType>* availableServices
    vector<individuals>* collaborators
    vector<individuals>* clients
    vector<intervention>* interventions
    ----
    void houseMaster()
    
    int getAvailableServices()
    int addAvailableServices(bool pro, string service)
    int removeAvailableServices(string service)
    
    int getCollaborators()
    int addCollaborator(string name, vector<servicesType>* functions, Availability)
    int removeCollaborator(unsigned int id)
    
    int getClients()
    int addClient(string name)
    int removeClient(unsigned int id)

    int getInterventions()
    int addIntervention(servicesType type, date appointment)
    int removeIntervention(unsigned int id)
    
    int assignCollaborator(intervention toAssignTo)
    int calculateCost(intervention toCalculateFrom)
}


class intervention{
    unsigned int id
    date appointment
    servicesType type
    collaborator assigned
    processState state
    float price
    ----
    void intervention()
    int getType()
    int getProcessState()
    int getPrice()
}


class individual{
    string name
    unsigned int id
    vector<interventions>* associatedInterventions
    ----
    void individual()
    int getId()
    int getName()
}

class collaborator{
    vector<servicesType>* functions
    classification score
    Availability
    ----
    void collaborator()
    int getFunctions()
    int getScore()
    int getAvailability()
}

class client{
    string NIF
    ----
    void client()
    int requestIntervention()
}

individual <|-- collaborator
individual <|-- client
@enduml